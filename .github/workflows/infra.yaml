name: Infrastructure

on:
  workflow_dispatch:
    inputs:
      force-apply:
        description: "Force apply"
        required: false
        default: "false"
      force-run:
        description: "Force run"
        required: false
        default: "false"
  push:
    branches:
      - main
    paths:
      - "infra/**/*.tf"
  pull_request:
    branches:
      - main
    paths:
      - "infra/**/*.tf"

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  network:
    uses: ./.github/workflows/terraform.yaml
    with:
      working-directory: infra/network
      aws-role: ${{ vars.AWS_ROLE }}
      aws-region: ${{ vars.AWS_REGION }}
      terraform-cloud-organization: ${{ vars.TERRAFORM_CLOUD_ORGANIZATION }}
      force-apply: ${{ github.event.inputs.force-apply == 'true' }}
      force-run: ${{ github.event.inputs.force-run == 'true' }}
    secrets:
      terraform-cloud-token: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}
  ecr:
    uses: ./.github/workflows/terraform.yaml
    with:
      working-directory: infra/ecr
      aws-role: ${{ vars.AWS_ROLE }}
      aws-region: ${{ vars.AWS_REGION }}
      terraform-cloud-organization: ${{ vars.TERRAFORM_CLOUD_ORGANIZATION }}
      force-apply: ${{ github.event.inputs.force-apply == 'true' }}
      force-run: ${{ github.event.inputs.force-run == 'true' }}
    secrets:
      terraform-cloud-token: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}
  database:
    uses: ./.github/workflows/terraform.yaml
    needs:
      - network
    with:
      working-directory: infra/database
      aws-role: ${{ vars.AWS_ROLE }}
      aws-region: ${{ vars.AWS_REGION }}
      terraform-cloud-organization: ${{ vars.TERRAFORM_CLOUD_ORGANIZATION }}
      force-apply: ${{ github.event.inputs.force-apply == 'true' }}
      force-run: ${{ github.event.inputs.force-run == 'true' }}
    secrets:
      terraform-cloud-token: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}
  ecs:
    uses: ./.github/workflows/terraform.yaml
    needs:
      - network
    with:
      working-directory: infra/ecs
      aws-role: ${{ vars.AWS_ROLE }}
      aws-region: ${{ vars.AWS_REGION }}
      terraform-cloud-organization: ${{ vars.TERRAFORM_CLOUD_ORGANIZATION }}
      force-apply: ${{ github.event.inputs.force-apply == 'true' }}
      force-run: ${{ github.event.inputs.force-run == 'true' }}
    secrets:
      terraform-cloud-token: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}
  kratos:
    uses: ./.github/workflows/terraform.yaml
    needs:
      - network
      - ecs
      - database
    with:
      working-directory: infra/applications/kratos
      aws-role: ${{ vars.AWS_ROLE }}
      aws-region: ${{ vars.AWS_REGION }}
      terraform-cloud-organization: ${{ vars.TERRAFORM_CLOUD_ORGANIZATION }}
      force-apply: ${{ github.event.inputs.force-apply == 'true' }}
      force-run: ${{ github.event.inputs.force-run == 'true' }}
    secrets:
      terraform-cloud-token: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}
