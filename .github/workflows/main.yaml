name: Main workflow

on:
  workflow_dispatch:
    inputs:
      force-apply:
        type: boolean
        description: "Force apply terraform"
        required: false
      force-plan:
        type: boolean
        description: "Force plan terraform"
        required: false
      force-build:
        type: boolean
        description: "Force build application images"
        required: false
      force-deploy:
        type: boolean
        description: "Force deploy application images"
        required: false
      force-db-build:
        type: boolean
        description: "Force build database images"
        required: false
      force-db-deploy:
        type: boolean
        description: "Force deploy database images"
        required: false

  push:
    branches:
      - main
    paths:
      - "infra/**/*.tf"
      - "applications/**"
      - "database/**"

  pull_request:
    branches:
      - main
    paths:
      - "infra/**/*.tf"
      - "applications/**"
      - "database/**"

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  run-infra:
    name: Infra
    uses: "./.github/workflows/infra_main.yaml"
    with:
      force-apply: ${{ fromJson(inputs.force-apply || false) }}
      force-plan: ${{ fromJson(inputs.force-plan || false) }}
    secrets:
      TERRAFORM_CLOUD_TOKEN: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}

  run-database-modifications:
    name: Database
    needs: run-infra
    uses: "./.github/workflows/database_main.yaml"
    with:
      force-build: ${{ fromJson(inputs.force-db-build || false) }}
      force-run: ${{ fromJson(inputs.force-db-deploy || false) }}
      image-tag: "latest"

  run-applications:
    name: Apps
    needs:
      - run-infra
      - run-database-modifications
    uses: "./.github/workflows/application_main.yaml"
    with:
      force-build: ${{ fromJson(inputs.force-build || false) }}
      force-deploy: ${{ fromJson(inputs.force-deploy || false) }}
      image-tag: "latest"

  update-pr:
    name: Update Pull Request
    needs:
      - run-infra
      - run-database-modifications
      - run-applications
    if: github.event_name == 'pull_request' && always()
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Comment
        uses: actions/cache@v3
        with:
          path: comment.md
          key: ${{ github.run_id }}
      - name: Add Comment
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
            const content = fs.readFileSync('comment.md', 'utf8');
            const output = `ðŸ¤– Here is the result of your workflow run. ðŸ¤–

            ${content}

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
